/**FERC Form 6 Rules
**/


RULE-NAME-PREFIX FERC

assert F6.300.1 satisfied 
$rule_id = rule-name();
if ($waivedSchedules intersect $scheduleLookup[(rule-name().split('.'))[3]]).length > 0
        skip
else

 $sum1 = {@OperatingRevenues}; 
 $addend = ({@GatheringRevenues} 
 + {@TrunkRevenues} 
 + {@DeliveryRevenues} 
 + {@AllowanceOilRevenue} 
 + {@StorageAndDemurrageRevenue} 
 + {@RentalRevenue} 
 + {@IncidentalRevenue});

tolerance_for_decimals($sum1,$addend,$tolerance_factor)  
message 
"The company has reported a value for OperatingRevenues with a value of {$sum1} that is not equal to the value of the sum of its components of {$addend}

Total Element : {$sum1.concept.name}
Total Period : {$sum1.period}
Total Dimensions: {$sum1.dimensions.join(', ','=')}
Total Value : {$sum1} 

Rule Id:{$rule_id}"
severity error
rule-focus $sum1

assert F6.300.2 satisfied 
$rule_id = rule-name();
if ($waivedSchedules intersect $scheduleLookup[(rule-name().split('.'))[3]]).length > 0
        skip
else

 $sum1 = {@ProductsAndServicesAxis=none @cube=OilOperatingRevenuesTable}; 
 $addend = {@ProductsAndServicesAxis=CrudeOilMember @cube=OilOperatingRevenuesTable} 
 + {@ProductsAndServicesAxis=OilProductsMember @cube=OilOperatingRevenuesTable};
tolerance_for_decimals($sum1,$addend,$tolerance_factor)  
message 
"The company has reported a value for {$sum1.concept.name.local-name} with a value of {$sum1} that is not equal to the value of the sum of {$sum1.concept.name.local-name} broken down by the  CrudeOilMember and OilProductsMember with a value of {$addend}.

Total Element : {$sum1.concept.name}
Total Period : {$sum1.period}
Total Dimensions: {$sum1.dimensions.join(', ','=')}
Total Value : {$sum1} 

Rule Id:{$rule_id}"
severity error
rule-focus $sum1
